<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.tongji.programming.mapper.StudentMapper">
    <insert id="insertStudent">
        INSERT INTO Student (stuNo, major, name, courseId)
        VALUES (#{student.stuNo},#{student.major},#{student.name},#{student.courseId})
    </insert>

    <insert id="insertStudents">
        INSERT INTO Student (stuNo, major, name, courseId)
        VALUES
        <foreach collection="student" item="item" index="i" separator=",">
            (#{item.stuNo}, #{item.major}, #{item.name}, #{item.courseId})
        </foreach>
    </insert>

    <delete id="deleteTable">
        DROP TABLE `Student`
    </delete>

    <delete id="deleteById">
        DELETE FROM Student WHERE stuNo = #{id} AND courseId = #{courseId}
    </delete>

    <delete id="deleteByClassNo">
        DELETE FROM Student WHERE courseId = #{courseId}
    </delete>

    <select id="tableExists" resultType="boolean">
        SELECT count(*)>0 FROM sqlite_master WHERE type="table" AND name = "Student"
    </select>

    <select id="selectAll" resultType="org.tongji.programming.pojo.Student">
        SELECT * FROM Student
    </select>

    <select id="selectById" resultType="org.tongji.programming.pojo.Student">
        SELECT * FROM Student WHERE stuNo = #{id} AND courseId = #{courseId}
    </select>

    <select id="selectWithPage" resultType="org.tongji.programming.pojo.Student">
        SELECT * FROM Student
        ORDER BY stuNo
        LIMIT #{pageSize}
        OFFSET (#{pageNum}-1)*#{pageSize}
    </select>

    <select id="selectWithPagByCourse" resultType="org.tongji.programming.pojo.Student">
        SELECT * FROM Student
        WHERE courseId = #{courseId}
        ORDER BY stuNo
            LIMIT #{pageSize}
        OFFSET (#{pageNum}-1)*#{pageSize}
    </select>

    <update id="createTable">
        CREATE TABLE IF NOT EXISTS `Student` (
            `stuNo` VARCHAR(10) NOT NULL,
            `major` VARCHAR(10) NOT NULL,
            `name` VARCHAR(30) NOT NULL,
            `courseId` VARCHAR(15) NOT NULL,
            PRIMARY KEY (`stuNo`,`courseId`),
            FOREIGN KEY (`courseId`) REFERENCES `Course` (`id`)
        )
    </update>
</mapper>
